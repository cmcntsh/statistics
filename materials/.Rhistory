#mean(WideCleaned$`mean.A1c - pre`)
SummaryWideCleaned <- WideCleaned[,list(PreMean=mean(WideCleaned$'mean.A1c - pre')
,PreSD=sd(WideCleaned$'mean.A1c - pre')
,PostMean=mean(WideCleaned$'mean.A1c - post')
,PostSD=sd(WideCleaned$'mean.A1c - post'),.N)]
SummaryWideCleaned
#na.omit(WideCleaned, cols=c("mean.A1c - pre","mean.A1c - post"))
# paired t-test just for kicks
t.test(Wide$`mean.A1c - pre`,Wide$`mean.A1c - post`,paired=TRUE)
#head(WideCleaned)
#mean(WideCleaned$`mean.A1c - pre`)
SummaryWide <- Wide[,list(PreMean=mean(Wide$'mean.A1c - pre')
,PreSD=sd(Wide$'mean.A1c - pre')
,PostMean=mean(Wide$'mean.A1c - post')
,PostSD=sd(Wide$'mean.A1c - post'),.N)]
SummaryWide
SummaryWideCleaned <- WideCleaned[,list(PreMean=mean(WideCleaned$'mean.A1c - pre')
,PreSD=sd(WideCleaned$'mean.A1c - pre')
,PostMean=mean(WideCleaned$'mean.A1c - post')
,PostSD=sd(WideCleaned$'mean.A1c - post'),.N)]
SummaryWideCleaned
#na.omit(WideCleaned, cols=c("mean.A1c - pre","mean.A1c - post"))
#head(WideCleaned)
#mean(WideCleaned$`mean.A1c - pre`)
names(Wide)
SummaryWide <- Wide[,list(PreMean=mean(Wide$'mean.A1c - pre')
,PreSD=sd(Wide$'mean.A1c - pre')
,PostMean=mean(Wide$'mean.A1c - post')
,PostSD=sd(Wide$'mean.A1c - post'),.N)]
SummaryWide
SummaryWideCleaned <- WideCleaned[,list(PreMean=mean(WideCleaned$'mean.A1c - pre')
,PreSD=sd(WideCleaned$'mean.A1c - pre')
,PostMean=mean(WideCleaned$'mean.A1c - post')
,PostSD=sd(WideCleaned$'mean.A1c - post'),.N)]
SummaryWideCleaned
#na.omit(WideCleaned, cols=c("mean.A1c - pre","mean.A1c - post"))
# reformat the data set to match up pre- and post- A1c scores for individuals
Wide <- reshape(Individuals, idvar = "PERSON_MK", timevar = "pre-post", direction = "wide")
Wide
names(Wide)
SummaryWide <- Wide[,list(PreMean=mean(Wide$'mean.A1c - pre')
,PreSD=sd(Wide$'mean.A1c - pre')
,PostMean=mean(Wide$'mean.A1c - post')
,PostSD=sd(Wide$'mean.A1c - post'),.N)]
SummaryWide
names(Wide)
SummaryWide <- Wide[,list(PreMean=mean(na.omit(Wide$'mean.A1c - pre'))
,PreSD=sd(Wide$'mean.A1c - pre')
,PostMean=mean(Wide$'mean.A1c - post')
,PostSD=sd(Wide$'mean.A1c - post'),.N)]
SummaryWide
names(Wide)
SummaryWide <- Wide[,list(PreMean=mean(na.omit(Wide$'mean.A1c - pre'))
,PreSD=sd(na.omit(Wide$'mean.A1c - pre'))
,PostMean=mean(na.omit(Wide$'mean.A1c - post'))
,PostSD=sd(na.omit(Wide$'mean.A1c - post')),.N)]
SummaryWide
names(Wide)
SummaryWide <- Wide[,list(PreMean=mean(na.omit(Wide$'mean.A1c - pre'))
,PreSD=sd(na.omit(Wide$'mean.A1c - pre'))
,Pre_Count=length(na.omit(Wide$'mean.A1c - pre'))
,PostMean=mean(na.omit(Wide$'mean.A1c - post'))
,PostSD=sd(na.omit(Wide$'mean.A1c - post')),.N)]
SummaryWide
names(Wide)
SummaryWide <- Wide[,list(PreMean=mean(na.omit(Wide$'mean.A1c - pre'))
,PreSD=sd(na.omit(Wide$'mean.A1c - pre'))
,Pre_Count=length(na.omit(Wide$'mean.A1c - pre'))
,PostMean=mean(na.omit(Wide$'mean.A1c - post'))
,PostSD=sd(na.omit(Wide$'mean.A1c - post'))
,Post_Count=length(na.omit(Wide$'mean.A1c - post')),.N)]
SummaryWide
SummaryWide <- Wide[,list(PreMean=mean(na.omit(Wide$'mean.A1c - pre'))
,PreSD=sd(na.omit(Wide$'mean.A1c - pre'))
,Pre_Count=length(na.omit(Wide$'mean.A1c - pre'))
,PostMean=mean(na.omit(Wide$'mean.A1c - post'))
,PostSD=sd(na.omit(Wide$'mean.A1c - post'))
,Post_Count=length(na.omit(Wide$'mean.A1c - post')),.N)]
SummaryWide
#head(WideCleaned)
#mean(WideCleaned$`mean.A1c - pre`)
SummaryWideCleaned <- WideCleaned[,list(PreMean=mean(WideCleaned$'mean.A1c - pre')
,PreSD=sd(WideCleaned$'mean.A1c - pre')
,PostMean=mean(WideCleaned$'mean.A1c - post')
,PostSD=sd(WideCleaned$'mean.A1c - post'),.N)]
SummaryWideCleaned
#na.omit(WideCleaned, cols=c("mean.A1c - pre","mean.A1c - post"))
install.packages("bookdown")
# install packages if needed
listOfPackages <- c("learnr")
for (i in listOfPackages){
if(! i %in% installed.packages()){
install.packages(i, dependencies = TRUE)
}
library(i)
}
# install packages if needed
listOfPackages <- c("learnr")
for (i in listOfPackages){
if(! i %in% installed.packages()){
install.packages(i, dependencies = TRUE)
}
library(i)
}
# install packages if needed
listOfPackages <- c("learnr")
for (i in listOfPackages){
if(! i %in% installed.packages()){
install.packages(i, dependencies = TRUE)
}
library(i)
}
# install packages if needed
listOfPackages <- c("learnr")
for (i in listOfPackages){
if(! i %in% installed.packages()){
install.packages(i, dependencies = TRUE)
}
library(i, character.only = TRUE)
}
# install packages if needed
listOfPackages <- c("learnr")
for (i in listOfPackages){
if(! i %in% installed.packages()){
install.packages(i, dependencies = TRUE)
}
library(i, character.only = TRUE)
}
1+1
rmarkdown::run("Test Tutorial.Rmd")
rmarkdown::run("C:/Users/cimacint/Documents/Junk/Test Tutorial.Rmd")
rmarkdown::run("C:/Users/cimacint/Documents/Junk/Test Tutorial/Test Tutorial.Rmd")
rmarkdown::run("C:/Users/cimacint/Documents/Junk/Test Tutorial/Test Tutorial.Rmd")
rmarkdown::run("C:/Users/cimacint/Documents/Junk/Test Tutorial/Test Tutorial.Rmd")
rmarkdown::run("C:/Users/cimacint/Documents/Junk/Test Tutorial/Test Tutorial.Rmd")
1+1
install.packages("exams", dependencies = TRUE)
library("exams")
set.seed(1090)
exams2html("dist.Rnw")
library("exams")
set.seed(1090)
exams2pdf("dist.Rnw")
library("exams")
set.seed(1090)
exams2html("dist.Rmd")
library("exams")
set.seed(1090)
exams2pdf("dist.Rnw")
library("exams")
set.seed(1090)
exams2pdf("dist.Rnw")
library("exams")
set.seed(1090)
exams2html("dist.Rnw")
library("exams")
set.seed(1090)
exams2pdf("dist.Rnw")
library("exams")
set.seed(1090)
exams2pdf("dist.Rnw")
library("exams")
set.seed(1090)
exams2pdf("dist.Rnw")
library("exams")
set.seed(1090)
exams2pdf("dist.Rnw")
library("exams")
set.seed(1090)
exams2pdf("dist.Rnw")
install.packages("a4wide")
library("exams")
set.seed(1090)
exams2pdf("dist.Rnw")
library("exams")
set.seed(1090)
exams2pdf("dist.Rnw")
library("exams")
set.seed(1090)
exams2pdf("dist.Rnw")
Week1 <- read.csv("C:/Users/cimacint/Downloads/Week1.csv")
View(Week1)
Week1 <- read.csv("C:/Users/cimacint/Downloads/Week1.csv", fileEncoding="UTF-8-BOM")
View(Week1)
library(readxl)
Week1 <- read_excel("C:/Users/cimacint/Downloads/Week1.xlsx")
View(Week1)
library(readr)
Week1 <- read_csv("C:/Users/cimacint/Downloads/Week1.csv")
View(Week1)
library(haven)
Week1 <- read_sav("C:/Users/cimacint/Downloads/Week1.sav")
View(Week1)
data()
data(swiss)
class(swiss)
View(swiss)
?swiss
data()
data(uspop)
class(uspop)
data(sleep)
class(sleep)
View(sleep)
?sleep
data()
?USAccDeaths
?USPersonalExpenditure
?lh
?uspop
?plot()
plot(swiss$Fertility,swiss$Agriculture)
library(summarytools)
install.packages("summarytools")
library(summarytools)
dfsummary(Week1)
dfSummary(Week1)
view(dfSummary(Week1))
view(dfSummary(Week1))
view(dfSummary(Week1))
View(dfSummary(Week1))
view(dfSummary(Week1))
view(dfSummary(Week1))
view(dfSummary(Week1))
library(haven)
dataset <- read_sav(choose.files())
View(dataset)
view(dfSummary(dataset))
view(dfSummary(dataset))
library(haven)
dataset <- read_sav(choose.files())
View(dataset)
view(dfSummary(dataset))
library(summarytools)
view(dfSummary(dataset))
library(readr)
Week1 <- read_csv("C:/Users/cimacint/Downloads/Week1.csv")
View(Week1)
view(dfSummary(Week1))
?factor()
levels(Week1$ordinal)
levels(dataset$ordinal)
levels(dataset$nominal)
dataset$nominal
Week1$nominal
Week1$nominal
levels(Week1$nominal)
str(Week1)
class(Week1)
data <- read.csv(file.choose())
View(data)
colnames(data)[1] <- "nominal"
data <- read.csv(file.choose())
library(summarytools)
view(dfSummary(data))
names(data)
colnames(data)[1] <- "nominal"
names(data)
class(data)
class(data)
class(data$nominal)
class(data$ordinal)
class(c(data$nominal,data$ordinal,data$interval,data$ratio))
class(data)
class(data$nominal)
class(data$ordinal)
class(data$interval)
class(data$ratio)
class(data)
class(data$nominal)
levels(data$nominal)
class(data$ordinal)
class(data$interval)
class(data$ratio)
class(data)
class(data$nominal)
levels(data$nominal)
class(data$ordinal)
levels(data$ordinal)
class(data$interval)
class(data$ratio)
data$ordinal <- factor(data$ordinal, levels = c("first","second","third","fourth"))
class(data)
class(data$nominal)
levels(data$nominal)
class(data$ordinal)
levels(data$ordinal)
class(data$interval)
class(data$ratio)
data$ordinal <- factor(data$ordinal, ordered=TRUE, levels = c("first","second","third","fourth"))
class(data)
class(data$nominal)
levels(data$nominal)
class(data$ordinal)
levels(data$ordinal)
class(data$interval)
class(data$ratio)
library(summarytools)
view(dfSummary(data))
library(haven)
var.labels <- c(nominal="sex", ordinal="birth order",interval="temperature in Celsius", ratio="height in inches")
label(data) = as.list(var.labels[match(names(data),names(var.labels))])
install.packages(Hmisc)
install.packages("Hmisc")
library(Hmisc)
var.labels <- c(nominal="sex", ordinal="birth order",interval="temperature in Celsius", ratio="height in inches")
label(data) = as.list(var.labels[match(names(data),names(var.labels))])
library(summarytools)
view(dfSummary(data))
qplot(c(data$interval,data$ratio))
qplot(data$interval)
qplot(data$interval,binwidth=.1)
qplot(data$ratio,binwidth=.1)
qplot(data$ratio)
boxplot(data$interval)
boxplot(data$ratio)
hist(data$ratio)
hist(data$interval)
plot(data$interval,data$ratio)
?scale()
data$height_z <- scale(data$ratio,center=TRUE,scale=TRUE)
data$height_z <- scale(data$ratio,center=TRUE,scale=TRUE)
data$temp_z <- scale(data$interval,center=TRUE,scale=TRUE)
boxplot(data$interval)
plot(data$interval,data$ratio)
boxplot(data$interval)
boxplot(data$ratio)
plot(data$interval,data$ratio)
var1 <- c(1,2,3,4,5,5,6,7,8,9,10)
boxplot(var1)
summary(var1)
boxplot(var1, horizontal=TRUE, staplewex=1)
text(x=fivenum(var1), labels=fivenum(var1),y=1.25)
boxplot(var1, staplewex=1)
text(y=fivenum(var1),labels=fivenum(var1),x=1.25)
boxplot(data$interval)
boxplot(data$ratio)
text(y=fivenum(data$ratio),labels=fivenum(data$ratio),x=1.25)
plot(data$interval,data$ratio)
boxplot(data$interval)
boxplot(data$ratio)
text(y=fivenum(data$ratio),labels=fivenum(data$ratio),x=1.25)
plot(data$interval,data$ratio)
boxplot(data$interval)
boxplot(data$ratio)
text(y=fivenum(data$ratio),labels=fivenum(data$ratio),x=1.5)
plot(data$interval,data$ratio)
boxplot(data$interval)
boxplot(data$ratio)
text(y=fivenum(data$ratio),labels=fivenum(data$ratio),x=1.25)
plot(data$interval,data$ratio)
boxplot(data$interval)
boxplot(data$ratio,staplwex=1)
text(y=fivenum(data$ratio),labels=fivenum(data$ratio),x=1.25)
plot(data$interval,data$ratio)
getwd()
setwd("~/GitHub/statistics/materials")
myexam <- c(sample(wk1stats,2,replace=FALSE),sample(wk1R,3,replace=FALSE),sample(wk1vars,3,replace=FALSE),sample(wk1valid,3,replace=FALSE),sample(wk1LoM,9,replace=FALSE))
wk1stats <- c('w01001stats.Rmd', 'w01002stats.Rmd', 'w01003stats.Rmd', 'w01004stats.Rmd', 'w01005stats.Rmd', 'w01006stats.Rmd', 'w01007stats.Rmd', 'w01008stats.Rmd', 'w01009stats.Rmd', 'w01010stats.Rmd', 'w01011stats.Rmd', 'w01069stats.Rmd')
wk1R <- c('w01012R.Rmd', 'w01013R.Rmd', 'w01014R.Rmd', 'w01015R.Rmd', 'w01016R.Rmd', 'w01017R.Rmd', 'w01018R.Rmd', 'w01019R.Rmd', 'w01020R.Rmd', 'w01021R.Rmd', 'w01022R.Rmd', 'w01023R.Rmd', 'w01024R.Rmd', 'w01032R.Rmd', 'w01033R.Rmd', 'w01034R.Rmd', 'w01035R.Rmd', 'w01036R.Rmd', 'w01037R.Rmd')
wk1vars <- c('w01038vars.Rmd', 'w01039vars.Rmd', 'w01040vars.Rmd', 'w01041vars.Rmd', 'w01042vars.Rmd', 'w01043vars.Rmd', 'w01044vars.Rmd', 'w01045vars.Rmd', 'w01046vars.Rmd', 'w01047vars.Rmd', 'w01048vars.Rmd', 'w01049vars.Rmd', 'w01050vars.Rmd', 'w01051vars.Rmd', 'w01052vars.Rmd', 'w01053vars.Rmd', 'w01054vars.Rmd', 'w01070vars.Rmd', 'w01071vars.Rmd', 'w01072vars.Rmd', 'w01073vars.Rmd')
wk1valid <- c('w01025valid.Rmd', 'w01026valid.Rmd', 'w01027valid.Rmd', 'w01028valid.Rmd', 'w01029valid.Rmd', 'w01030valid.Rmd', 'w01031valid.Rmd', 'w01082valid.Rmd', 'w01083valid.Rmd', 'w01084valid.Rmd', 'w01085valid.Rmd', 'w01086valid.Rmd', 'w01087valid.Rmd', 'w01088valid.Rmd', 'w01089valid.Rmd', 'w01090valid.Rmd', 'w01091valid.Rmd', 'w01092valid.Rmd', 'w01093valid.Rmd', 'w01094valid.Rmd')
wk1LoM <- c('w01055LoM.Rmd', 'w01056LoM.Rmd', 'w01057LoM.Rmd', 'w01058LoM.Rmd', 'w01059LoM.Rmd', 'w01060LoM.Rmd', 'w01061LoM.Rmd', 'w01062LoM.Rmd', 'w01063LoM.Rmd', 'w01064LoM.Rmd', 'w01065LoM.Rmd', 'w01066LoM.Rmd', 'w01067LoM.Rmd', 'w01068LoM.Rmd', 'w01074LoM.Rmd', 'w01075LoM.Rmd', 'w01076LoM.Rmd', 'w01077LoM.Rmd', 'w01078LoM.Rmd', 'w01079LoM.Rmd', 'w01080LoM.Rmd', 'w01081LoM.Rmd', 'w01095LoM.Rmd', 'w01096LoM.Rmd', 'w01097LoM.Rmd', 'w01098LoM.Rmd', 'w01099LoM.Rmd', 'w01100LoM.Rmd', 'w01101LoM.Rmd', 'w01102LoM.Rmd', 'w01103LoM.Rmd', 'w01104LoM.Rmd', 'w01105LoM.Rmd', 'w01106LoM.Rmd', 'w01107LoM.Rmd', 'w01108LoM.Rmd', 'w01109LoM.Rmd', 'w01110LoM.Rmd', 'w01111LoM.Rmd', 'w01112LoM.Rmd', 'w01113LoM.Rmd', 'w01114LoM.Rmd', 'w01115LoM.Rmd', 'w01116LoM.Rmd', 'w01117LoM.Rmd', 'w01118LoM.Rmd', 'w01119LoM.Rmd', 'w01120LoM.Rmd', 'w01121LoM.Rmd', 'w01122LoM.Rmd', 'w01123LoM.Rmd', 'w01124LoM.Rmd', 'w01125LoM.Rmd', 'w01126LoM.Rmd')
myexam <- c(sample(wk1stats,2,replace=FALSE),sample(wk1R,3,replace=FALSE),sample(wk1vars,3,replace=FALSE),sample(wk1valid,3,replace=FALSE),sample(wk1LoM,9,replace=FALSE))
myexam
exams2pdf(myexam, n = 3, name = c("pdf-exam", "pdf-solution"),
encoding = "UTF-8",
dir = "~/GitHub/statistics/quizzes",
edir = "~/GitHub/statistics/R exams exercises",
template = c("R exams templates/exam.tex", "R exams templates/solution.tex"),
header = list(
Date = "2019-03-14",
ID = function(i) formatC(i, width = 5, flag = "0")
))
## ----------------------------------------------------------------------------------
library("exams")
setwd("~/GitHub/statistics/materials")
exams2pdf(myexam, n = 3, name = c("pdf-exam", "pdf-solution"),
encoding = "UTF-8",
dir = "~/GitHub/statistics/quizzes",
edir = "~/GitHub/statistics/R exams exercises",
template = c("R exams templates/exam.tex", "R exams templates/solution.tex"),
header = list(
Date = "2019-03-14",
ID = function(i) formatC(i, width = 5, flag = "0")
))
exams2pdf(myexam, n = 3, name = c("pdf-exam", "pdf-solution"),
encoding = "UTF-8",
dir = "~/GitHub/statistics/quizzes",
edir = "../R exams exercises",
template = c("R exams templates/exam.tex", "R exams templates/solution.tex"),
header = list(
Date = "2019-03-14",
ID = function(i) formatC(i, width = 5, flag = "0")
))
exams2pdf(myexam, n = 3, name = c("pdf-exam", "pdf-solution"),
encoding = "UTF-8",
dir = "~/GitHub/statistics/quizzes",
edir = "/R exams exercises",
template = c("R exams templates/exam.tex", "R exams templates/solution.tex"),
header = list(
Date = "2019-03-14",
ID = function(i) formatC(i, width = 5, flag = "0")
))
exams2pdf(myexam, n = 3, name = c("pdf-exam", "pdf-solution"),
encoding = "UTF-8",
dir = "~/GitHub/statistics/quizzes",
edir = "/R exams exercises/",
template = c("R exams templates/exam.tex", "R exams templates/solution.tex"),
header = list(
Date = "2019-03-14",
ID = function(i) formatC(i, width = 5, flag = "0")
))
exams2pdf(myexam, n = 3, name = c("pdf-exam", "pdf-solution"),
encoding = "UTF-8",
dir = "~/GitHub/statistics/quizzes",
edir = "../statistics/R exams exercises",
template = c("R exams templates/exam.tex", "R exams templates/solution.tex"),
header = list(
Date = "2019-03-14",
ID = function(i) formatC(i, width = 5, flag = "0")
))
exams2pdf(myexam, n = 3, name = c("pdf-exam", "pdf-solution"),
encoding = "UTF-8",
dir = "~/GitHub/statistics/quizzes",
edir = "R exams exercises",
template = c("R exams templates/exam.tex", "R exams templates/solution.tex"),
header = list(
Date = "2019-03-14",
ID = function(i) formatC(i, width = 5, flag = "0")
))
exams2pdf(myexam, n = 3, name = c("pdf-exam", "pdf-solution"),
encoding = "UTF-8",
dir = "~/GitHub/statistics/quizzes",
edir = "R exams exercises",
template = c("R exams templates/exam.tex", "R exams templates/solution.tex"),
header = list(
Date = "2019-03-14",
ID = function(i) formatC(i, width = 5, flag = "0")
))
myexam
exams2pdf(w01021R.Rmd, name = c("Week 1 Quiz", "Week 1 Solutions"),
encoding = "UTF-8",
dir = "~/GitHub/statistics/quizzes",
edir = "R exams exercises",
template = c("R exams templates/exam.tex", "R exams templates/solution.tex"),
header = list(
Date = "2019-03-14",
ID = function(i) formatC(i, width = 5, flag = "0")
))
exams2pdf(w01021R.Rmd, n=1,name = c("Week 1 Quiz", "Week 1 Solutions"),
encoding = "UTF-8",
dir = "~/GitHub/statistics/quizzes",
edir = "R exams exercises",
template = c("R exams templates/exam.tex", "R exams templates/solution.tex"),
header = list(
Date = "2019-03-14",
ID = function(i) formatC(i, width = 5, flag = "0")
))
single <- c("w01021R.Rmd")
exams2pdf(single, n=1,name = c("Week 1 Quiz", "Week 1 Solutions"),
encoding = "UTF-8",
dir = "~/GitHub/statistics/quizzes",
edir = "R exams exercises",
template = c("R exams templates/exam.tex", "R exams templates/solution.tex"),
header = list(
Date = "2019-03-14",
ID = function(i) formatC(i, width = 5, flag = "0")
))
single <- c("w01037R.Rmd")
exams2pdf(single, n=1,name = c("Week 1 Quiz", "Week 1 Solutions"),
encoding = "UTF-8",
dir = "~/GitHub/statistics/quizzes",
edir = "R exams exercises",
template = c("R exams templates/exam.tex", "R exams templates/solution.tex"),
header = list(
Date = "2019-03-14",
ID = function(i) formatC(i, width = 5, flag = "0")
))
single <- c("w01035R.Rmd")
exams2pdf(single, n=1,name = c("Week 1 Quiz", "Week 1 Solutions"),
encoding = "UTF-8",
dir = "~/GitHub/statistics/quizzes",
edir = "R exams exercises",
template = c("R exams templates/exam.tex", "R exams templates/solution.tex"),
header = list(
Date = "2019-03-14",
ID = function(i) formatC(i, width = 5, flag = "0")
))
exams2pdf(single, n=1,name = c("Week 1 Quiz", "Week 1 Solutions"),
encoding = "UTF-8",
dir = "~/GitHub/statistics/quizzes",
edir = "R exams exercises",
template = c("R exams templates/exam.tex", "R exams templates/solution.tex"),
header = list(
Date = "2019-03-14",
ID = function(i) formatC(i, width = 5, flag = "0")
))
myexam <- c(sample(wk1stats,2,replace=FALSE),sample(wk1R,3,replace=FALSE),sample(wk1vars,3,replace=FALSE),sample(wk1valid,3,replace=FALSE),sample(wk1LoM,9,replace=FALSE))
exams2pdf(myexam, n = 3, name = c("Week 1 Quiz", "Week 1 Solutions"),
encoding = "UTF-8",
dir = "~/GitHub/statistics/quizzes",
edir = "R exams exercises",
template = c("R exams templates/exam.tex", "R exams templates/solution.tex"),
header = list(
Date = "2019-03-14",
ID = function(i) formatC(i, width = 5, flag = "0")
))
library(readr)
dataset <- read_csv(file.choose())
View(dataset)
names(dataset)
