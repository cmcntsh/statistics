tidyr::gather(variable, class)
library(magrittr)
dataset %<>% mutate(nominal = as.factor(nominal))
levels(dataset$nominal)
dataset %<>% mutate(ordinal = factor(ordinal, levels=c("nominal","ordinal","interval","ratio")))
levels(dataset$ordinal)
View(dataset)
#dplyr::glimpse(dataset) # dplyr is part of the Tidyverse packages
#str(dataset)
library(readr)
dataset <- readr::read_csv(file.choose())
View(dataset)
# See column information
dataset %>%
dplyr::summarise_all(class) %>%
tidyr::gather(variable, class)
library(magrittr)
dataset %<>% mutate(nominal = as.factor(nominal))
levels(dataset$nominal)
dataset %<>% mutate(ordinal = as.factor(ordinal, levels=c("nominal","ordinal","interval","ratio")))
library(magrittr)
dataset %<>% mutate(nominal = as.factor(nominal))
levels(dataset$nominal)
lvlsorder -> c("nominal","ordinal","interval","ratio")
library(magrittr)
dataset %<>% mutate(nominal = as.factor(nominal))
levels(dataset$nominal)
lvlsorder -> c("nominal","ordinal","interval","ratio")
library(magrittr)
dataset %<>% mutate(nominal = as.factor(nominal))
levels(dataset$nominal)
dataset %<>% mutate(ordinal = as.factor(ordinal, levels=lvls_reorder("nominal","ordinal","interval","ratio")))
library(magrittr)
dataset %<>% mutate(nominal = as.factor(nominal))
levels(dataset$nominal)
dataset %<>% mutate(ordinal = as.factor(ordinal))
dataset %<>% fct_relevel(ordinal,"nominal","ordinal","interval","ratio")
# See column information
dataset %>%
dplyr::summarise_all(class) %>%
tidyr::gather(variable, class)
library(magrittr)
dataset %<>% mutate(nominal = as.factor(nominal))
levels(dataset$nominal)
dataset %<>% mutate(ordinal = as.factor(ordinal))
dataset %<>% fct_relevel(dataset$ordinal,"nominal","ordinal","interval","ratio")
library(magrittr)
dataset %<>% mutate(nominal = as.factor(nominal))
levels(dataset$nominal)
dataset %<>% mutate(ordinal = as.factor(ordinal))
dataset %<>% fct_relevel(ordinal,"nominal","ordinal","interval","ratio")
library(magrittr)
dataset %<>% mutate(nominal = as.factor(nominal))
levels(dataset$nominal)
dataset %<>% mutate(ordinal = as.factor(ordinal))
dataset %<>% mutate(ordinal = fct_relevel(ordinal,"nominal","ordinal","interval","ratio"))
levels(dataset$ordinal)
library(magrittr)
dataset %<>% mutate(nominal = as.factor(nominal))
levels(dataset$nominal)
dataset %<>% mutate(ordinal = as.factor(ordinal))
dataset %<>% mutate(ordinal = fct_relevel(ordinal,"first","second","third","fourth"))
levels(dataset$ordinal)
library(magrittr)
dataset %<>% mutate(nominal = as.factor(nominal))
levels(dataset$nominal)
dataset %<>% mutate(ordinal = as.factor(ordinal))
levels(dataset$ordinal)
dataset %<>% mutate(ordinal = fct_relevel(ordinal,"first","second","third","fourth"))
levels(dataset$ordinal)
library(readr)
dataset <- readr::read_csv(file.choose())
View(dataset)
# See column information
dataset %>%
dplyr::summarise_all(class) %>%
tidyr::gather(variable, class)
library(magrittr)
dataset %<>% mutate(nominal = as.factor(nominal))
levels(dataset$nominal)
dataset %<>% mutate(ordinal = as.factor(ordinal))
levels(dataset$ordinal)
dataset %<>% mutate(ordinal = fct_relevel(ordinal,"first","second","third","fourth"))
levels(dataset$ordinal)
# See column information
dataset %>%
dplyr::summarise_all(class) %>%
tidyr::gather(variable, class)
dataset %>%
dplyr::select(interval,ratio) %>%
dplyr::summarise_each(funs(class = class
, valid = sum(!is.na(.),na.rm = TRUE)
, missing = sum(is.na(.))
, misspercent = scales::percent(round(sum(is.na(.))/sum(!is.na(.)
,na.rm = TRUE),2))
, min = min(.,na.rm = TRUE)
, q25 = quantile(., 0.25,na.rm = TRUE)
, median = median(.,na.rm = TRUE)
, q75 = quantile(., 0.75,na.rm = TRUE)
, max = max(.,na.rm = TRUE)
, range = diff(range(.))
, mean = round(mean(.,na.rm = TRUE),2)
, sd = round(sd(.,na.rm = TRUE),2)
, variance = round(var(.,na.rm = TRUE),2)
, ShapWilk = ifelse(sd(.)!=0,round(shapiro.test(.)$statistic,2),NA)
, ShapWilkp = ifelse(sd(.)!=0,round(shapiro.test(.)$p.value,2),NA))) %>%
tidyr::gather(stat,val) %>%
tidyr::separate(stat, into = c("var", "stat"), sep = "_") %>%
tidyr::spread(stat, val) %>%
dplyr::select(var
, class
, valid
, missing
, misspercent
, min
, q25
, median
, q75
, max
, range
, mean
, sd
, variance
, ShapWilk
, ShapWilkp) %>% # reorder
print()
dataset %>%
dplyr::select(nominal, ordinal) %>%
dplyr::summarise_each(funs(class = class
, valid = sum(!is.na(.),na.rm = TRUE)
, missing = sum(is.na(.))
, misspercent = scales::percent(round(sum(is.na(.))/sum(!is.na(.)
,na.rm = TRUE),2))
, cats = n_distinct)) %>%
tidyr::gather(stat,val) %>%
tidyr::separate(stat, into = c("var", "stat"), sep = "_") %>%
tidyr::spread(stat, val) %>%
dplyr::select(var
, class
, valid
, missing
, misspercent
, cats) %>% # reorder
print()
# https://beta.rstudioconnect.com/content/3350/dplyr_tutorial.html
dataset %>%
dplyr::group_by(nominal) %>%
dplyr::summarize(frequency = n()) %>%
dplyr::arrange(desc(frequency)) %>%
dplyr::mutate(relative_frequency = frequency/sum(frequency),
relative_cumulative_frequency = cumsum(relative_frequency),
relative_frequency = round(100*relative_frequency,2),
relative_cumulative_frequency = round(100*relative_cumulative_frequency,2),
nr = row_number(-frequency)) %>%
dplyr::select(nr, everything())
# https://cran.r-project.org/web/packages/AMR/vignettes/freq.html
summarytools::freq(dataset[c("nominal","ordinal")])
summarytools::descr(dataset[c("interval","ratio")])
# https://cran.r-project.org/web/packages/summarytools/vignettes/Introduction.html
view(dfSummary(dataset, plain.ascii = FALSE, style = "grid",
graph.magnif = 0.75, valid.col = FALSE, tmp.img.dir = "/tmp"))
ggplot(data=dataset, aes(x=nominal)) +
geom_bar(stat="count")
ggplot(data=dataset, aes(x=ordinal)) +
geom_bar(aes(y = (..count..)/sum(..count..)))
ggplot(data=dataset, aes(x= "", y = interval)) +
geom_boxplot()
ggplot(data=dataset, aes(x=interval, y=ratio)) +
geom_point()
qplot(data$nominal)
qplot(dataset$nominal)
qplot(dataset$ordinal)
qplot(dataset$interval)
qplot(dataset$ratio)
qplot(dataset$nominal,dataset$ratio)
view(dfSummary(data))
view(dfSummary(dataset))
# https://cran.r-project.org/web/packages/summarytools/vignettes/Introduction.html
#view(dfSummary(dataset, plain.ascii = FALSE, style = "grid",
#          graph.magnif = 0.75, valid.col = FALSE, tmp.img.dir = "/tmp"))
view(dfSummary(dataset))
# https://cran.r-project.org/web/packages/summarytools/vignettes/Introduction.html
view(dfSummary(dataset, plain.ascii = FALSE, style = "grid",
graph.magnif = 0.95, valid.col = FALSE, tmp.img.dir = "/tmp"))
#view(dfSummary(dataset))
# https://cran.r-project.org/web/packages/summarytools/vignettes/Introduction.html
view(dfSummary(dataset, plain.ascii = FALSE, style = "grid",
graph.magnif = 1.5, valid.col = FALSE, tmp.img.dir = "/tmp"))
#view(dfSummary(dataset))
# https://cran.r-project.org/web/packages/summarytools/vignettes/Introduction.html
view(dfSummary(dataset, plain.ascii = FALSE, style = "grid",
graph.magnif = 0.75, valid.col = FALSE, tmp.img.dir = "/tmp"))
#view(dfSummary(dataset))
# https://cran.r-project.org/web/packages/summarytools/vignettes/Introduction.html
#view(dfSummary(dataset, plain.ascii = FALSE, style = "grid",
#          graph.magnif = 0.75, valid.col = FALSE, tmp.img.dir = "/tmp"))
view(dfSummary(dataset))
dataset %>% mutate(nominal2 = nominal)
dataset %>% mutate(nominal2 = nominal)
view(dfSummary(dataset))
dataset %>% mutate(nominal2 = nominal)
view(dfSummary(dataset))
dataset <- dataset %>% mutate(nominal2 = nominal)
view(dfSummary(dataset))
dataset$nominal2 <- recode(dataset$nominal2, female = 1, male = 2)
dataset$nominal2 <- recode(dataset$nominal2, female = 1, male = 2)
view(dfSummary(dataset))
dataset %>% mutate(nominal2 = nominal)
view(dfSummary(dataset))
dataset <- dataset %>% mutate(nominal2 = nominal)
view(dfSummary(dataset))
dataset$nominal2 <- recode(dataset$nominal2, female = "1", male = "2")
view(dfSummary(dataset))
dataset <- dataset %>% mutate(ordinal2 = ordinal) %>% recode(ordinal2, first=1, second=2, third=3, fourth=4)
dataset <- dataset %>% mutate(ordinal2 = ordinal)
dataset$ordinal2 <- recode(ordinal2, first=4, second=3, third=2, fourth=1)
dataset <- dataset %>% mutate(ordinal2 = ordinal)
#dataset$ordinal2 <- recode(ordinal2, first=4, second=3, third=2, fourth=1)
view(dfSummary(dataset))
dataset <- dataset %>% mutate(ordinal2 = ordinal)
dataset$ordinal2 <- recode(dataset$ordinal2, first=4, second=3, third=2, fourth=1)
view(dfSummary(dataset))
View(dataset)
dataset$ordinal2 <- add_labels(dataset$ordinal2, labels = c("low"=1, "medium low"=2, "medium high"=3, "high"=4))
# List the packages needed
packages <- c("tidyverse","summarytools", "magrittr", "sjlabelled")
# Check if each package is installed already. If not, install the package.
for (i in packages){
if(! i %in% installed.packages()){
install.packages(i,dependencies = TRUE)
}
# Show each package that is checked.
print(i)
# Load each package into memory so we can use it.
library(i,character.only=TRUE)
}
# List the packages needed
packages <- c("tidyverse","summarytools", "magrittr", "sjlabelled")
# Check if each package is installed already. If not, install the package.
for (i in packages){
if(! i %in% installed.packages()){
install.packages(i,dependencies = TRUE)
}
# Show each package that is checked.
print(i)
# Load each package into memory so we can use it.
library(i,character.only=TRUE)
}
dataset$ordinal2 <- add_labels(dataset$ordinal2, labels = c("low"=1, "medium low"=2, "medium high"=3, "high"=4))
view(dfSummary(dataset))
View(dataset)
get_labels(dataset$ordinal2)
get_labels(dataset$ordinal2)
val_labels(dataset)
# List the packages needed
packages <- c("tidyverse","summarytools", "magrittr", "sjlabelled", "labelled")
# Check if each package is installed already. If not, install the package.
for (i in packages){
if(! i %in% installed.packages()){
install.packages(i,dependencies = TRUE)
}
# Show each package that is checked.
print(i)
# Load each package into memory so we can use it.
library(i,character.only=TRUE)
}
# List the packages needed
packages <- c("tidyverse","summarytools", "magrittr", "sjlabelled", "labelled")
# Check if each package is installed already. If not, install the package.
for (i in packages){
if(! i %in% installed.packages()){
install.packages(i,dependencies = TRUE)
}
# Show each package that is checked.
print(i)
# Load each package into memory so we can use it.
library(i,character.only=TRUE)
}
get_labels(dataset$ordinal2)
labelled::val_labels(dataset)
get_labels(dataset$ordinal2)
labelled::val_labels(dataset)
dataset <- set_variable_labels(ordinal2 = "Variable Label for ordinal2")
get_labels(dataset$ordinal2)
labelled::val_labels(dataset)
dataset <- dataset %>% set_variable_labels(ordinal2 = "Variable Label for ordinal2")
labelled::val_labels(dataset)
get_labels(dataset$ordinal2)
labelled::val_labels(dataset)
dataset <- dataset %>% set_variable_labels(ordinal2 = "Variable Label for ordinal2")
labelled::var_labels(dataset)
get_labels(dataset$ordinal2)
labelled::val_labels(dataset)
dataset <- dataset %>% set_variable_labels(ordinal2 = "Variable Label for ordinal2")
labelled::var_label(dataset)
View(dataset)
get_labels(dataset$ordinal2)
labelled::val_labels(dataset)
dataset <- dataset %>% labelled::set_variable_labels(ordinal2 = "Variable Label for ordinal2")
labelled::var_label(dataset)
get_labels(dataset$ordinal2)
labelled::val_labels(dataset)
dataset <- dataset %>% labelled::set_variable_labels(ordinal2 = "Variable Label for ordinal2")
labelled::var_label(dataset)
dataset <- dataset %>% labelled::set_value_labels(ordinal2 = low=1, "medium low"=2, "medium high"=3, high=4)
get_labels(dataset$ordinal2)
labelled::val_labels(dataset)
dataset <- dataset %>% labelled::set_variable_labels(ordinal2 = "Variable Label for ordinal2")
labelled::var_label(dataset)
dataset <- dataset %>% labelled::set_value_labels(ordinal2 = c(low=1, "medium low"=2, "medium high"=3, high=4))
labelled::val_labels(dataset)
View(dataset)
# List the packages needed
packages <- c("tidyverse","summarytools", "labelled")
# Check if each package is installed already. If not, install the package.
for (i in packages){
if(! i %in% installed.packages()){
install.packages(i,dependencies = TRUE)
}
# Show each package that is checked.
print(i)
# Load each package into memory so we can use it.
library(i,character.only=TRUE)
}
# List the packages needed
packages <- c("tidyverse","summarytools", "labelled")
# Check if each package is installed already. If not, install the package.
for (i in packages){
if(! i %in% installed.packages()){
install.packages(i,dependencies = TRUE)
}
# Show each package that is checked.
print(i)
# Load each package into memory so we can use it.
library(i,character.only=TRUE)
}
library(readr)
dataset <- readr::read_csv(file.choose())
View(dataset)
#View(dataset)
dplyr::glimpse(dataset) # dplyr is part of the Tidyverse packages
#str(dataset)
# See column information
dataset %>%
dplyr::summarise_all(class) %>%
tidyr::gather(variable, class)
dataset <- mutate(nominal = as.factor(nominal))
dataset <- dataset %>% mutate(nominal = as.factor(nominal))
levels(dataset$nominal)
dataset <- dataset %>% mutate(ordinal = as.factor(ordinal))
levels(dataset$ordinal)
# These could have been done on a single line.
# dataset <- dataset %>% mutate_at(vars(nominal, ordinal), factor)
dataset <- dataset %>% mutate(ordinal = fct_relevel(ordinal,"first","second","third","fourth"))
levels(dataset$ordinal)
View(dataset)
dataset %>%
dplyr::select(interval,ratio) %>%
dplyr::summarise_each(funs(class = class
, valid = sum(!is.na(.),na.rm = TRUE)
, missing = sum(is.na(.))
, misspercent = scales::percent(round(sum(is.na(.))/sum(!is.na(.)
,na.rm = TRUE),2))
, min = min(.,na.rm = TRUE)
, q25 = quantile(., 0.25,na.rm = TRUE)
, median = median(.,na.rm = TRUE)
, q75 = quantile(., 0.75,na.rm = TRUE)
, max = max(.,na.rm = TRUE)
, range = diff(range(.))
, mean = round(mean(.,na.rm = TRUE),2)
, sd = round(sd(.,na.rm = TRUE),2)
, variance = round(var(.,na.rm = TRUE),2)
, ShapWilk = ifelse(sd(.)!=0,round(shapiro.test(.)$statistic,2),NA)
, ShapWilkp = ifelse(sd(.)!=0,round(shapiro.test(.)$p.value,2),NA))) %>%
tidyr::gather(stat,val) %>%
tidyr::separate(stat, into = c("var", "stat"), sep = "_") %>%
tidyr::spread(stat, val) %>%
dplyr::select(var
, class
, valid
, missing
, misspercent
, min
, q25
, median
, q75
, max
, range
, mean
, sd
, variance
, ShapWilk
, ShapWilkp) %>% # reorder
print()
dataset %>%
dplyr::select(nominal, ordinal) %>%
dplyr::summarise_each(funs(class = class
, valid = sum(!is.na(.),na.rm = TRUE)
, missing = sum(is.na(.))
, misspercent = scales::percent(round(sum(is.na(.))/sum(!is.na(.)
,na.rm = TRUE),2))
, cats = n_distinct)) %>%
tidyr::gather(stat,val) %>%
tidyr::separate(stat, into = c("var", "stat"), sep = "_") %>%
tidyr::spread(stat, val) %>%
dplyr::select(var
, class
, valid
, missing
, misspercent
, cats) %>% # reorder
print()
# https://beta.rstudioconnect.com/content/3350/dplyr_tutorial.html
dataset %>%
dplyr::group_by(nominal) %>%
dplyr::summarize(frequency = n()) %>%
dplyr::arrange(desc(frequency)) %>%
dplyr::mutate(relative_frequency = frequency/sum(frequency),
relative_cumulative_frequency = cumsum(relative_frequency),
relative_frequency = round(100*relative_frequency,2),
relative_cumulative_frequency = round(100*relative_cumulative_frequency,2),
nr = row_number(-frequency)) %>%
dplyr::select(nr, everything())
# https://cran.r-project.org/web/packages/AMR/vignettes/freq.html
summarytools::freq(dataset[c("nominal","ordinal")])
summarytools::descr(dataset[c("interval","ratio")])
# https://cran.r-project.org/web/packages/summarytools/vignettes/Introduction.html
#view(dfSummary(dataset, plain.ascii = FALSE, style = "grid",
#          graph.magnif = 0.75, valid.col = FALSE, tmp.img.dir = "/tmp"))
view(dfSummary(dataset))
ggplot(data=dataset, aes(x=nominal)) +
geom_bar(stat="count")
ggplot(data=dataset, aes(x=ordinal)) +
geom_bar(aes(y = (..count..)/sum(..count..)))
ggplot(data=dataset, aes(x= "", y = interval)) +
geom_boxplot()
ggplot(data=dataset, aes(x=ratio)) +
geom_histogram(binwidth = .2)
ggplot(data=dataset, aes(x=interval, y=ratio)) +
geom_point()
qplot(dataset$nominal)
qplot(dataset$ordinal)
qplot(dataset$interval)
qplot(dataset$ratio)
qplot(dataset$nominal,dataset$ratio)
write_csv(dataset, file = "Week2data.csv")
write_csv(dataset, path = "Week2data.csv")
readr::write_csv(dataset, path = "Week2data.csv")
readr::write_rds(dataset, path = "week2data.rds")
readr::write_rds(dataset, path = "week2data.rds")
haven::write_sav(dataset, path = "week2data.sav")
# List the packages needed
packages <- c("tidyverse","summarytools", "labelled", "openxlsx")
# Check if each package is installed already. If not, install the package.
for (i in packages){
if(! i %in% installed.packages()){
install.packages(i,dependencies = TRUE)
}
# Show each package that is checked.
print(i)
# Load each package into memory so we can use it.
library(i,character.only=TRUE)
}
# List the packages needed
packages <- c("tidyverse","summarytools", "labelled", "openxlsx")
# Check if each package is installed already. If not, install the package.
for (i in packages){
if(! i %in% installed.packages()){
install.packages(i,dependencies = TRUE)
}
# Show each package that is checked.
print(i)
# Load each package into memory so we can use it.
library(i,character.only=TRUE)
}
readr::write_rds(dataset, path = "week2data.rds")
haven::write_sav(dataset, path = "week2data.sav")
openxlsx::write.xlsx(dataset, file = "week2data.xlsx")
library(readr)
Week1 <- read_csv("~/GitHub/statistics/datasets/Week1.csv")
View(Week1)
dataset <- dataset %>%
mutate(ordinal2 = ordinal)
library("tidyverse")
dataset <- dataset %>%
mutate(ordinal2 = ordinal)
View(dataset)
library("tidyverse")
dataset <- dataset %>%
mutate(ordinal2 = recode_factor(ordinal,
"first" = "1st",
"second" = "2nd",
"third" = "3rd",
"fourth" = "4th",
.ordered = TRUE))
View(dataset)
levels(dataset$ordinal2)
library("tidyverse")
dataset <- dataset %>%
dplyr::mutate(ordinal2 = dplyr::recode_factor(ordinal,
"first" = "1st",
"second" = "2nd",
"third" = "3rd",
"fourth" = "4th",
.ordered = TRUE))
View(dataset)
levels(dataset$ordinal2)
levels(dataset$ordinal2)
view(dfSummary(dataset))
library(summarytools)
levels(dataset$ordinal2)
view(dfSummary(dataset))
